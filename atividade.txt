[] alterar algum atributo da pessoa
[] excluir pessoa passando cpf
[] consultar as pessoas cadastradas
[X] consultar uma pessoa pelo cpf


configurador de serviço
elemento que chega no ejb nao ta dentro da classe ejb
ele estaria dentro do controle que seria o servlet, pode deixar a parte, devemos colocar fora da classe do ejb, é mais para saber como foi construido e como chegou lá, isso seria a nossa valiação
como bonificação, diferencial, entrega até dia 26. criar um cenario mais complexo com uso do querybd

-----------------------
<contato>
 <nome></nome>**
 <sobrenome></sobrenome>
 <celular></celular>**
 <email></email>
 <endereco></endereco>
 <cpf></cpf>**
</contato>
---------------------------Criando Elemento----------------------------
< !Elemento contato(nome, sobrenome,celular,email,endereco,cpf)>
Elemento contato= new Elemento(“contato”);
Elemento nome = new Elemento(“nome”);
nome.setValor(“Carlos”);
nome.setObrigatorio(true);
contato.incluirFilho(nome);

Elemento sobreNome = new Elemento(“sobrenome”);
sobreNome.setValor(“Mendes”);
sobreNome.setObrigatorio(false);
contato.incluirFilho(sobreNome);

Elemento celular= new Elemento("celular")
celular.setValor(“99 9999-9999”);
celular.setObrigatorio(true);
contato.incluirFilho(celular);

Elemento email= new Elemento("email")
email.setValor(“carlos@gmail.com”);
email.setObrigatorio(false);
contato.incluirFilho(email);

Elemento endereco= new Elemento("endereco")
endereco.setValor(“rua acre 42”);
endereco.setObrigatorio(false);
endereco.incluirServico(SEValidaEndereco.class)
contato.incluirFilho(endereco);

Elemento cpf= new Elemento("cpf")
cpf.setValor(“123.456.789-01”);
cpf.setObrigatorio(true);
cpf.incluirServico(SEValidaCPF.class)
contato.incluirFilho(cpf);

-------------------------------Consultar CPF--------------------------

public Elemento consultarContatoCPF(Elemento elementoEntrada) {
  Consulta consulta = null;
  Connection conx = null;
  StringBuffer filtro = filtro.append("noCPF='"+elementoEntrada.cpf+"'");
  try {
    conx = getConnection();
    consulta = GerenciadorPrersistencia.consultar(BancoDeDados.TBCAD_HUMANOINST, filtro, conx);
    consulta.executar();

    while(consulta.proximo()){

      ObjetoPersistente obj = consulta.getObjetoPersistente();
      String nome = obj.getValor(“nome”);
      String sobrenome = obj.getValor(“sobrenome”);
      String celular = obj.getValor(“celular”);
      String email = obj.getValor(“email”);
      String endereco = obj.getValor("endereco");
      String cpf = obj.getValor("cpf");
    } 
    Elemento elementoRetorno = new Elemento();
    elementoRetorno.setValor("nome", nome);
    elementoRetorno.setValor("sobrenome", sobrenome);
    elementoRetorno.setValor("celular", celular);
    elementoRetorno.setValor("email", email);
    elementoRetorno.setValor("endereco",endereco);
    elementoRetorno.setValor("cpf",cpf);
  } catch (Exception e) {
    elementoRetorno = new ExcecaoEJB_ATF(e, this,true, elementoEntrada).tratar();
  } finally{
    ElementosConexao.fecharConexao(conx);
  }
  return elementoRetorno;
}



----------------------------------Consultar Cadastrados-----------------------------------

public Elemento consultarPessoasCadastradas(Elemento elementoEntrada) {
  Consulta consulta = null;
  Connection conx = null;
  try {
    conx = getConnection();
    consulta = GerenciadorPrersistencia.consultar(BancoDeDados.TBCAD_HUMANOINST, conx);
    consulta.executar();

    while(consulta.proximo()){

      ObjetoPersistente obj = consulta.getObjetoPersistente();
      String nome = obj.getValor(“nome”);
      String sobrenome = obj.getValor(“sobrenome”);
      String celular = obj.getValor(“celular”);
      String email = obj.getValor(“email”);
      String endereco = obj.getValor("endereco");
      String cpf = obj.getValor("cpf");
    } 
    Elemento elementoRetorno = new Elemento();
    elementoRetorno.setValor("nome", nome);
    elementoRetorno.setValor("sobrenome", sobrenome);
    elementoRetorno.setValor("celular", celular);
    elementoRetorno.setValor("email", email);
    elementoRetorno.setValor("endereco",endereco);
    elementoRetorno.setValor("cpf",cpf);
  } catch (Exception e) {
    elementoRetorno = new ExcecaoEJB_ATF(e, this,true, elementoEntrada).tratar();
  } finally{
    ElementosConexao.fecharConexao(conx);
  }
  return elementoRetorno;
}
----------------------------------Alterar Atributo---------------------------------------
public Elemento incluir(Elemento elementoEntrada) {
  Consulta consulta = null;
  Connection conx = null;
  try {
    conx = getConnection();
    consulta = GerenciadorPrersistencia.consultar(BancoDeDados.TBCAD_HUMANOINST, conx);
    consulta.executar();

    while(consulta.proximo()){

      ObjetoPersistente obj = consulta.getObjetoPersistente();
      String nome = obj.getValor(“nome”);
      String sobrenome = obj.getValor(“sobrenome”);
      String celular = obj.getValor(“celular”);
      String email = obj.getValor(“email”);
      String endereco = obj.getValor("endereco");
      String cpf = obj.getValor("cpf");
    } 
    Elemento elementoRetorno = new Elemento();
    elementoRetorno.setValor("nome", nome);
    elementoRetorno.setValor("sobrenome", sobrenome);
    elementoRetorno.setValor("celular", celular);
    elementoRetorno.setValor("email", email);
    elementoRetorno.setValor("endereco",endereco);
    elementoRetorno.setValor("cpf",cpf);
  } catch (Exception e) {
    elementoRetorno = new ExcecaoEJB_ATF(e, this,true, elementoEntrada).tratar();
  } finally{
    ElementosConexao.fecharConexao(conx);
  }
  return elementoRetorno;

}
---------------------------------------------------------------------------

public Elemento incluir(Elemento elementoEntrada) {
  Elemento elementoRetorno = UtilidadesElemento.criarElementoRetornoOk();

try {

UtilidadesElemento.aplicarServico(elementoEntrada, CFG_INCLUIR);

elementoEntrada.

} catch (Exception e) {

elementoRetorno = new ExcecaoEJB_ATF(e, this,true, elementoEntrada).tratar();

} finally{

}
return elementoRetorno;

}




chamarEJB(ELEMENTOeNVIO,CLASS, Mmantercurso.class,"incluir",response")